export interface chromeStorage {
    lastLogin?: Boolean;
    gameFilter?: String;
    autoRefresh?: Boolean;
    openSlots?: Number;
    notifications?: Boolean;
}
/*
 As CoN is a terribly optimzed game I cannot get the full type signature of hup (it would be like 10,000 lines long).
 so I just used this hack
 JSON.stringify(Object.keys(window.hup).reduce((json, value, key) => { json[value] = any return json; }, {}))
*/
interface websiteHup {
    gameState: any;
    ui: any;
    user: any;
    lastClick: any;
    model: any;
    ingameAds: any;
    contentItems: any;
    seasonRepository: any;
    sounds: any;
    getMod: any;
    isGuestLogin: any;
    isContinuousMap: any;
    isAdmin: any;
    isPlayingOnSteam: any;
    isUsingFireflyService: any;
    TouchController: any;
    I18n: any;
    DataFormat: any;
    Polygon: any;
    tutorial: any;
    LocalCache: any;
    localCache: any;
    GameStateHandler: any;
    WebAPI: any;
    webapi: any;
    Navigation: any;
    AllianceController: any;
    allianceController: any;
    GameButtonsController: any;
    Utils: any;
    navigationHelper: any;
    CoatOfArmsConfig: any;
    InGameAdsController: any;
    inGameAdsController: any;
    ModdableI18n: any;
    ModdableInventory: any;
    config: any;
    consts: any;
    handlebars: any;
    jed: any;
    i18n: any;
    gameStateHandler: any;
    loader: any;
}
interface gameHup {
    gameState: any;
    ui: any;
    user: any;
    lastClick: any;
    model: any;
    ingameAds: any;
    contentItems: any;
    seasonRepository: any;
    sounds: any;
    getMod: any;
    isGuestLogin: any;
    isContinuousMap: any;
    isAdmin: any;
    isPlayingOnSteam: any;
    isUsingFireflyService: any;
    WebAPI: any;
    webapi: any;
    TouchController: any;
    I18n: any;
    DataFormat: any;
    Navigation: any;
    Polygon: any;
    tutorial: any;
    LocalCache: any;
    localCache: any;
    GameStateHandler: any;
    Auth: any;
    UserActionConfirmContainer: any;
    UserActionQueueContainer: any;
    UserActionController: any;
    TrackingController: any;
    ArmyController: any;
    CommandModes: any;
    armyController: any;
    FacebookController: any;
    AttackPainter: any;
    InfantryAttackPainter: any;
    ArtilleryAttackPainter: any;
    RadarPainter: any;
    Utils: any;
    AirplaneAttackPainter: any;
    BomberAttackPainter: any;
    MageAttackPainter: any;
    DragonAttackPainter: any;
    BaseAntiAirAttackPainter: any;
    MissilesAntiAirAttackPainter: any;
    TracersAntiAirAttackPainter: any;
    AntiAirAttackPainter: any;
    ArmyPaintData: any;
    ImageFontChar: any;
    ImageFont: any;
    ArmyPainter: any;
    ArmyPainterText: any;
    CollisionMap: any;
    DrawPosManager: any;
    PinArmyPainter: any;
    ForegroundMapItem: any;
    ProvinceTagItem: any;
    ProvinceFlagMapItem: any;
    QuestMapItem: any;
    ContaminationMapItem: any;
    ProvinceRevoltItem: any;
    BuildingHighlightItem: any;
    RadiationDomeHighlightItem: any;
    MissileRenderConfig: any;
    ArmySelectionModel: any;
    armySelection: any;
    ProvinceSelectionModel: any;
    provinceSelection: any;
    Clip: any;
    TouchIndicators: any;
    Stats: any;
    StatsCounter: any;
    statsInstance: any;
    CoatOfArmsConfig: any;
    CoatOfArmsRenderer: any;
    UserPreferencesController: any;
    userPreferencesController: any;
    productionsHelper: any;
    UnitFeatureHelper: any;
    unitFeatureHelper: any;
    MedievalArmyPainter: any;
    MapAnimationEngine: any;
    TerrainTypeColorsConfig: any;
    RocketAttackPainter: any;
    RocketChemAttackPainter: any;
    RocketNukeAttackPainter: any;
    RocketConvAttackPainter: any;
    Ww2AirplaneAttackPainter: any;
    CruiseConvAttackPainter: any;
    CruiseChemAttackPainter: any;
    CruiseNukeAttackPainter: any;
    ICBMAttackPainter: any;
    Ww2InfantryAttackPainter: any;
    Ww2ArtilleryAttackPainter: any;
    MediumArtilleryAttackPainter: any;
    HeavyArtilleryAttackPainter: any;
    MLRSArtilleryAttackPainter: any;
    ShipAttackPainter: any;
    Ww2ArmyPainter: any;
    MapCursors: any;
    MapMouseController: any;
    ResourceController: any;
    resourceController: any;
    SpeedUpCreator: any;
    PremiumInterface: any;
    premiumInterface: any;
    ProvinceController: any;
    provinceController: any;
    SpyActionSimulator: any;
    spyActionSimulator: any;
    uiPremiumHelper: any;
    EntryFinder: any;
    ChatController: any;
    StrategicAdviserController: any;
    strategicAdviserController: any;
    navigationHelper: any;
    InGameAdsController: any;
    inGameAdsController: any;
    Toastr: any;
    ModuleConfig: any;
    ModdableI18n: any;
    ModdableInventory: any;
    AdminActionController: any;
    AdminActionTypes: any;
    AdminActionConfirmationLevels: any;
    AdviceConfigurations: any;
    InGameAllianceController: any;
    MADController: any;
    PageVisibilityHandler: any;
    TutorialAdviceTextWidget: any;
    config: any;
    consts: any;
    handlebars: any;
    jed: any;
    i18n: any;
    gameStateHandler: any;
    loader: any;
    auth: any;
    clientControlsWidget: any;
    researchWidget: any;
    provinceBuildingWidget: any;
    provinceConstructionWidget: any;
    spyWidget: any;
    chatWidget: any;
    tutorialWidget: any;
    userActionController: any;
    keyboardListener: any;
    kInput: any;
    dialogController: any;
    adminActionController: any;
    inGameAllianceController: any;
    adminMadInfoWidget: any;
    adminMadCaseInfoWidget: any;
    mapImages: any;
    canvasMapRenderer: any;
    mapMouseController: any;
    mapdata: any;
    chat: any;
}
export interface myWindow {
    chromeStorage: chromeStorage;
    hup: any;
}
export interface websiteWindow extends myWindow {
    hup: websiteHup;
}
export interface gameWindow extends myWindow {
    hup: gameHup;
}
