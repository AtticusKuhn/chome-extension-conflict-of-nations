webpackHotUpdate("all",{

/***/ "./src/injected/script.ts":
/*!********************************!*\
  !*** ./src/injected/script.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// import autoRefresh from './autoRefresh';\n\n/*\n    rip I must have every function in 1 file unitll I figure out how to use webpack\n    */\nconst inject = config => {\n  const Mwindow = window;\n\n  function autoRefresh(_config) {\n    setInterval(() => {\n      console.log(\"interval checking...\");\n\n      if (!Mwindow.chromeStorage.autoRefresh) {\n        return; // only execute if this setting has been enabled\n      }\n\n      const games_button = document.querySelector(\"#ui_open_new_games\");\n\n      if (!games_button) {\n        return;\n      } //@ts-ignore\n\n\n      games_button.click();\n    }, 1e3); // if(!window.locatio)\n\n    console.log(\"auto refresh function\");\n  }\n\n  function gameFilter() {\n    console.log(\"game filter called\");\n    const proxy = Mwindow.hup.model.games.Game.onSearchGamesLoaded;\n\n    Mwindow.hup.model.games.Game.onSearchGamesLoaded = function () {\n      if (!Mwindow.chromeStorage.gameFilter || Mwindow.chromeStorage.gameFilter === \"none\") {\n        return proxy.apply(this, [].slice.call(arguments));\n      }\n\n      console.log(\"proxy called\");\n      let newA = arguments[0];\n      console.log(newA.result.games);\n      const newGames = newA.result.games.filter(game => game.properties.title === Mwindow.chromeStorage.gameFilter.toUpperCase());\n      console.log({\n        newGames\n      });\n      newA.result.games = newGames;\n      const newArguments = [newA, arguments[1]];\n      return proxy.apply(this, [].slice.call(newArguments));\n    };\n  } // const Mwindow /= (window as unknown) as myWindow;\n\n\n  Mwindow.chromeStorage = config;\n  console.log(\"injected\"); // console.log(hup.config.user);\n  // Mwindow.hup = {\n  //     aInternal: {},\n  //     aListener: (val: any) => {},\n  //     set a(val) {\n  //         this.aInternal = val;\n  //         this.aListener(val);\n  //     },\n  //     get a() {\n  //         return this.aInternal;\n  //     },\n  //     registerListener: function (listener: any) {\n  //         this.aListener = listener;\n  //     },\n  // };\n\n  setTimeout(() => {\n    console.log(Mwindow.hup); // this is the good info\n\n    autoRefresh(config);\n    gameFilter(); // eval(`(${autoRefresh.toString()})(${JSON.stringify(config)})`);\n  }, 1000);\n};\n\nconst _default = inject;\n/* harmony default export */ __webpack_exports__[\"default\"] = (_default);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(inject, \"inject\", \"/home/eulerthedestroyer/Con-Extension/awesome-chrome-extension-boilerplate/src/injected/script.ts\");\n  reactHotLoader.register(_default, \"default\", \"/home/eulerthedestroyer/Con-Extension/awesome-chrome-extension-boilerplate/src/injected/script.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5qZWN0ZWQvc2NyaXB0LnRzPzc0MTYiXSwibmFtZXMiOlsiaW5qZWN0IiwiY29uZmlnIiwiTXdpbmRvdyIsIndpbmRvdyIsImF1dG9SZWZyZXNoIiwiX2NvbmZpZyIsInNldEludGVydmFsIiwiY29uc29sZSIsImxvZyIsImNocm9tZVN0b3JhZ2UiLCJnYW1lc19idXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGljayIsImdhbWVGaWx0ZXIiLCJwcm94eSIsImh1cCIsIm1vZGVsIiwiZ2FtZXMiLCJHYW1lIiwib25TZWFyY2hHYW1lc0xvYWRlZCIsImFwcGx5Iiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwibmV3QSIsInJlc3VsdCIsIm5ld0dhbWVzIiwiZmlsdGVyIiwiZ2FtZSIsInByb3BlcnRpZXMiLCJ0aXRsZSIsInRvVXBwZXJDYXNlIiwibmV3QXJndW1lbnRzIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBOztBQUNBOzs7QUFHQSxNQUFNQSxNQUFNLEdBQUlDLE1BQUQsSUFBdUI7QUFDbEMsUUFBTUMsT0FBTyxHQUFJQyxNQUFqQjs7QUFDQSxXQUFTQyxXQUFULENBQXFCQyxPQUFyQixFQUFtQztBQUMvQkMsZUFBVyxDQUFDLE1BQU07QUFDZEMsYUFBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7O0FBQ0EsVUFBSSxDQUFDTixPQUFPLENBQUNPLGFBQVIsQ0FBc0JMLFdBQTNCLEVBQXdDO0FBQ3BDLGVBRG9DLENBQzVCO0FBQ1g7O0FBQ0QsWUFBTU0sWUFBWSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsb0JBQXZCLENBQXJCOztBQUNBLFVBQUksQ0FBQ0YsWUFBTCxFQUFtQjtBQUNmO0FBQ0gsT0FSYSxDQVNkOzs7QUFDQUEsa0JBQVksQ0FBQ0csS0FBYjtBQUNILEtBWFUsRUFXUixHQVhRLENBQVgsQ0FEK0IsQ0FhL0I7O0FBQ0FOLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLHVCQUFaO0FBQ0g7O0FBQ0QsV0FBU00sVUFBVCxHQUFzQjtBQUNsQlAsV0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQVo7QUFDQSxVQUFNTyxLQUFLLEdBQUdiLE9BQU8sQ0FBQ2MsR0FBUixDQUFZQyxLQUFaLENBQWtCQyxLQUFsQixDQUF3QkMsSUFBeEIsQ0FBNkJDLG1CQUEzQzs7QUFDQWxCLFdBQU8sQ0FBQ2MsR0FBUixDQUFZQyxLQUFaLENBQWtCQyxLQUFsQixDQUF3QkMsSUFBeEIsQ0FBNkJDLG1CQUE3QixHQUFtRCxZQUFZO0FBQzNELFVBQ0ksQ0FBQ2xCLE9BQU8sQ0FBQ08sYUFBUixDQUFzQkssVUFBdkIsSUFDQVosT0FBTyxDQUFDTyxhQUFSLENBQXNCSyxVQUF0QixLQUFxQyxNQUZ6QyxFQUdFO0FBQ0UsZUFBT0MsS0FBSyxDQUFDTSxLQUFOLENBQVksSUFBWixFQUFrQixHQUFHQyxLQUFILENBQVNDLElBQVQsQ0FBY0MsU0FBZCxDQUFsQixDQUFQO0FBQ0g7O0FBQ0RqQixhQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQ0EsVUFBSWlCLElBQUksR0FBR0QsU0FBUyxDQUFDLENBQUQsQ0FBcEI7QUFDQWpCLGFBQU8sQ0FBQ0MsR0FBUixDQUFZaUIsSUFBSSxDQUFDQyxNQUFMLENBQVlSLEtBQXhCO0FBQ0EsWUFBTVMsUUFBUSxHQUFHRixJQUFJLENBQUNDLE1BQUwsQ0FBWVIsS0FBWixDQUFrQlUsTUFBbEIsQ0FDWkMsSUFBRCxJQUNJQSxJQUFJLENBQUNDLFVBQUwsQ0FBZ0JDLEtBQWhCLEtBQ0E3QixPQUFPLENBQUNPLGFBQVIsQ0FBc0JLLFVBQXRCLENBQWlDa0IsV0FBakMsRUFIUyxDQUFqQjtBQUtBekIsYUFBTyxDQUFDQyxHQUFSLENBQVk7QUFBRW1CO0FBQUYsT0FBWjtBQUNBRixVQUFJLENBQUNDLE1BQUwsQ0FBWVIsS0FBWixHQUFvQlMsUUFBcEI7QUFDQSxZQUFNTSxZQUFZLEdBQUcsQ0FBQ1IsSUFBRCxFQUFPRCxTQUFTLENBQUMsQ0FBRCxDQUFoQixDQUFyQjtBQUNBLGFBQU9ULEtBQUssQ0FBQ00sS0FBTixDQUFZLElBQVosRUFBa0IsR0FBR0MsS0FBSCxDQUFTQyxJQUFULENBQWNVLFlBQWQsQ0FBbEIsQ0FBUDtBQUNILEtBbkJEO0FBb0JILEdBekNpQyxDQTBDbEM7OztBQUNBL0IsU0FBTyxDQUFDTyxhQUFSLEdBQXdCUixNQUF4QjtBQUNBTSxTQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaLEVBNUNrQyxDQTZDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBMEIsWUFBVSxDQUFDLE1BQU07QUFDYjNCLFdBQU8sQ0FBQ0MsR0FBUixDQUFZTixPQUFPLENBQUNjLEdBQXBCLEVBRGEsQ0FDYTs7QUFDMUJaLGVBQVcsQ0FBQ0gsTUFBRCxDQUFYO0FBQ0FhLGNBQVUsR0FIRyxDQUliO0FBQ0gsR0FMUyxFQUtQLElBTE8sQ0FBVjtBQU1ILENBbEVEOztpQkFtRWVkLE07QUFBQTs7Ozs7Ozs7OzswQkFuRVRBLE0iLCJmaWxlIjoiLi9zcmMvaW5qZWN0ZWQvc2NyaXB0LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXlXaW5kb3cgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbi8vIGltcG9ydCBhdXRvUmVmcmVzaCBmcm9tICcuL2F1dG9SZWZyZXNoJztcbi8qXG4gICAgcmlwIEkgbXVzdCBoYXZlIGV2ZXJ5IGZ1bmN0aW9uIGluIDEgZmlsZSB1bml0bGwgSSBmaWd1cmUgb3V0IGhvdyB0byB1c2Ugd2VicGFja1xuICAgICovXG5jb25zdCBpbmplY3QgPSAoY29uZmlnOiBhbnkpOiB2b2lkID0+IHtcbiAgICBjb25zdCBNd2luZG93ID0gKHdpbmRvdyBhcyB1bmtub3duKSBhcyBteVdpbmRvdztcbiAgICBmdW5jdGlvbiBhdXRvUmVmcmVzaChfY29uZmlnOiBhbnkpIHtcbiAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJpbnRlcnZhbCBjaGVja2luZy4uLlwiKTtcbiAgICAgICAgICAgIGlmICghTXdpbmRvdy5jaHJvbWVTdG9yYWdlLmF1dG9SZWZyZXNoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuOyAvLyBvbmx5IGV4ZWN1dGUgaWYgdGhpcyBzZXR0aW5nIGhhcyBiZWVuIGVuYWJsZWRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGdhbWVzX2J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdWlfb3Blbl9uZXdfZ2FtZXNcIik7XG4gICAgICAgICAgICBpZiAoIWdhbWVzX2J1dHRvbikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgICAgICAgZ2FtZXNfYnV0dG9uLmNsaWNrKCk7XG4gICAgICAgIH0sIDFlMyk7XG4gICAgICAgIC8vIGlmKCF3aW5kb3cubG9jYXRpbylcbiAgICAgICAgY29uc29sZS5sb2coXCJhdXRvIHJlZnJlc2ggZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGdhbWVGaWx0ZXIoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZ2FtZSBmaWx0ZXIgY2FsbGVkXCIpO1xuICAgICAgICBjb25zdCBwcm94eSA9IE13aW5kb3cuaHVwLm1vZGVsLmdhbWVzLkdhbWUub25TZWFyY2hHYW1lc0xvYWRlZDtcbiAgICAgICAgTXdpbmRvdy5odXAubW9kZWwuZ2FtZXMuR2FtZS5vblNlYXJjaEdhbWVzTG9hZGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICFNd2luZG93LmNocm9tZVN0b3JhZ2UuZ2FtZUZpbHRlciB8fFxuICAgICAgICAgICAgICAgIE13aW5kb3cuY2hyb21lU3RvcmFnZS5nYW1lRmlsdGVyID09PSBcIm5vbmVcIlxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3h5LmFwcGx5KHRoaXMsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInByb3h5IGNhbGxlZFwiKTtcbiAgICAgICAgICAgIGxldCBuZXdBID0gYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgY29uc29sZS5sb2cobmV3QS5yZXN1bHQuZ2FtZXMpO1xuICAgICAgICAgICAgY29uc3QgbmV3R2FtZXMgPSBuZXdBLnJlc3VsdC5nYW1lcy5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKGdhbWU6IGFueSkgPT5cbiAgICAgICAgICAgICAgICAgICAgZ2FtZS5wcm9wZXJ0aWVzLnRpdGxlID09PVxuICAgICAgICAgICAgICAgICAgICBNd2luZG93LmNocm9tZVN0b3JhZ2UuZ2FtZUZpbHRlci50b1VwcGVyQ2FzZSgpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgY29uc29sZS5sb2coeyBuZXdHYW1lcyB9KTtcbiAgICAgICAgICAgIG5ld0EucmVzdWx0LmdhbWVzID0gbmV3R2FtZXM7XG4gICAgICAgICAgICBjb25zdCBuZXdBcmd1bWVudHMgPSBbbmV3QSwgYXJndW1lbnRzWzFdXTtcbiAgICAgICAgICAgIHJldHVybiBwcm94eS5hcHBseSh0aGlzLCBbXS5zbGljZS5jYWxsKG5ld0FyZ3VtZW50cykpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBjb25zdCBNd2luZG93IC89ICh3aW5kb3cgYXMgdW5rbm93bikgYXMgbXlXaW5kb3c7XG4gICAgTXdpbmRvdy5jaHJvbWVTdG9yYWdlID0gY29uZmlnO1xuICAgIGNvbnNvbGUubG9nKFwiaW5qZWN0ZWRcIik7XG4gICAgLy8gY29uc29sZS5sb2coaHVwLmNvbmZpZy51c2VyKTtcbiAgICAvLyBNd2luZG93Lmh1cCA9IHtcbiAgICAvLyAgICAgYUludGVybmFsOiB7fSxcbiAgICAvLyAgICAgYUxpc3RlbmVyOiAodmFsOiBhbnkpID0+IHt9LFxuICAgIC8vICAgICBzZXQgYSh2YWwpIHtcbiAgICAvLyAgICAgICAgIHRoaXMuYUludGVybmFsID0gdmFsO1xuICAgIC8vICAgICAgICAgdGhpcy5hTGlzdGVuZXIodmFsKTtcbiAgICAvLyAgICAgfSxcbiAgICAvLyAgICAgZ2V0IGEoKSB7XG4gICAgLy8gICAgICAgICByZXR1cm4gdGhpcy5hSW50ZXJuYWw7XG4gICAgLy8gICAgIH0sXG4gICAgLy8gICAgIHJlZ2lzdGVyTGlzdGVuZXI6IGZ1bmN0aW9uIChsaXN0ZW5lcjogYW55KSB7XG4gICAgLy8gICAgICAgICB0aGlzLmFMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICAgIC8vICAgICB9LFxuICAgIC8vIH07XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKE13aW5kb3cuaHVwKTsgLy8gdGhpcyBpcyB0aGUgZ29vZCBpbmZvXG4gICAgICAgIGF1dG9SZWZyZXNoKGNvbmZpZyk7XG4gICAgICAgIGdhbWVGaWx0ZXIoKTtcbiAgICAgICAgLy8gZXZhbChgKCR7YXV0b1JlZnJlc2gudG9TdHJpbmcoKX0pKCR7SlNPTi5zdHJpbmdpZnkoY29uZmlnKX0pYCk7XG4gICAgfSwgMTAwMCk7XG59O1xuZXhwb3J0IGRlZmF1bHQgaW5qZWN0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/injected/script.ts\n");

/***/ })

})