webpackHotUpdate("all",{

/***/ "./src/injected/script.ts":
/*!********************************!*\
  !*** ./src/injected/script.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// import autoRefresh from './autoRefresh';\n\n/*\n    rip I must have every function in 1 file unitll I figure out how to use webpack\n    */\nconst inject = config => {\n  const Mwindow = window;\n\n  if (window.location.href === \"https://www.conflictnations.com/game.php?bust=1\") {\n    return;\n  }\n\n  function autoRefresh(_config) {\n    setInterval(() => {\n      console.log(\"interval checking...\");\n\n      if (!Mwindow.chromeStorage.autoRefresh) {\n        return; // only execute if this setting has been enabled\n      }\n\n      const games_button = document.querySelector(\"#ui_open_new_games\");\n\n      if (!games_button) {\n        return;\n      } //@ts-ignore\n\n\n      games_button.click();\n    }, 1e3); // if(!window.locatio)\n\n    console.log(\"auto refresh function\");\n  }\n\n  function gameFilter() {\n    console.log(\"game filter called\");\n    const proxy = Mwindow.hup.model.games.Game.onSearchGamesLoaded;\n\n    Mwindow.hup.model.games.Game.onSearchGamesLoaded = function () {\n      if (!Mwindow.chromeStorage.gameFilter) {\n        return proxy.apply(this, [].slice.call(arguments));\n      }\n\n      console.log(\"proxy called\"); // if(!Mwindow.chromeStorage.gam)\n\n      let newA = arguments[0];\n      console.log(newA.result.games);\n      const newGames = newA.result.games.filter(game => game.properties.title === Mwindow.chromeStorage.gameFilter.toUpperCase());\n      console.log({\n        newGames\n      });\n      newA.result.games = newGames;\n      const newArguments = [newA, arguments[1]];\n      return proxy.apply(this, [].slice.call(newArguments));\n    };\n  } // const Mwindow /= (window as unknown) as myWindow;\n\n\n  Mwindow.chromeStorage = config;\n  console.log(\"injected\"); // console.log(hup.config.user);\n  // Mwindow.hup = {\n  //     aInternal: {},\n  //     aListener: (val: any) => {},\n  //     set a(val) {\n  //         this.aInternal = val;\n  //         this.aListener(val);\n  //     },\n  //     get a() {\n  //         return this.aInternal;\n  //     },\n  //     registerListener: function (listener: any) {\n  //         this.aListener = listener;\n  //     },\n  // };\n\n  setTimeout(() => {\n    console.log(Mwindow.hup); // this is the good info\n\n    autoRefresh(config);\n    gameFilter(); // eval(`(${autoRefresh.toString()})(${JSON.stringify(config)})`);\n  }, 1000);\n};\n\nconst _default = inject;\n/* harmony default export */ __webpack_exports__[\"default\"] = (_default);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(inject, \"inject\", \"/home/eulerthedestroyer/Con-Extension/awesome-chrome-extension-boilerplate/src/injected/script.ts\");\n  reactHotLoader.register(_default, \"default\", \"/home/eulerthedestroyer/Con-Extension/awesome-chrome-extension-boilerplate/src/injected/script.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5qZWN0ZWQvc2NyaXB0LnRzPzc0MTYiXSwibmFtZXMiOlsiaW5qZWN0IiwiY29uZmlnIiwiTXdpbmRvdyIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImF1dG9SZWZyZXNoIiwiX2NvbmZpZyIsInNldEludGVydmFsIiwiY29uc29sZSIsImxvZyIsImNocm9tZVN0b3JhZ2UiLCJnYW1lc19idXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGljayIsImdhbWVGaWx0ZXIiLCJwcm94eSIsImh1cCIsIm1vZGVsIiwiZ2FtZXMiLCJHYW1lIiwib25TZWFyY2hHYW1lc0xvYWRlZCIsImFwcGx5Iiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwibmV3QSIsInJlc3VsdCIsIm5ld0dhbWVzIiwiZmlsdGVyIiwiZ2FtZSIsInByb3BlcnRpZXMiLCJ0aXRsZSIsInRvVXBwZXJDYXNlIiwibmV3QXJndW1lbnRzIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBOztBQUNBOzs7QUFHQSxNQUFNQSxNQUFNLEdBQUlDLE1BQUQsSUFBdUI7QUFDbEMsUUFBTUMsT0FBTyxHQUFJQyxNQUFqQjs7QUFFQSxNQUNJQSxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLElBQWhCLEtBQ0EsaURBRkosRUFHRTtBQUNFO0FBQ0g7O0FBQ0QsV0FBU0MsV0FBVCxDQUFxQkMsT0FBckIsRUFBbUM7QUFDL0JDLGVBQVcsQ0FBQyxNQUFNO0FBQ2RDLGFBQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaOztBQUNBLFVBQUksQ0FBQ1IsT0FBTyxDQUFDUyxhQUFSLENBQXNCTCxXQUEzQixFQUF3QztBQUNwQyxlQURvQyxDQUM1QjtBQUNYOztBQUNELFlBQU1NLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLG9CQUF2QixDQUFyQjs7QUFDQSxVQUFJLENBQUNGLFlBQUwsRUFBbUI7QUFDZjtBQUNILE9BUmEsQ0FTZDs7O0FBQ0FBLGtCQUFZLENBQUNHLEtBQWI7QUFDSCxLQVhVLEVBV1IsR0FYUSxDQUFYLENBRCtCLENBYS9COztBQUNBTixXQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNIOztBQUNELFdBQVNNLFVBQVQsR0FBc0I7QUFDbEJQLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaO0FBQ0EsVUFBTU8sS0FBSyxHQUFHZixPQUFPLENBQUNnQixHQUFSLENBQVlDLEtBQVosQ0FBa0JDLEtBQWxCLENBQXdCQyxJQUF4QixDQUE2QkMsbUJBQTNDOztBQUNBcEIsV0FBTyxDQUFDZ0IsR0FBUixDQUFZQyxLQUFaLENBQWtCQyxLQUFsQixDQUF3QkMsSUFBeEIsQ0FBNkJDLG1CQUE3QixHQUFtRCxZQUFZO0FBQzNELFVBQUksQ0FBQ3BCLE9BQU8sQ0FBQ1MsYUFBUixDQUFzQkssVUFBM0IsRUFBdUM7QUFDbkMsZUFBT0MsS0FBSyxDQUFDTSxLQUFOLENBQVksSUFBWixFQUFrQixHQUFHQyxLQUFILENBQVNDLElBQVQsQ0FBY0MsU0FBZCxDQUFsQixDQUFQO0FBQ0g7O0FBQ0RqQixhQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaLEVBSjJELENBSzNEOztBQUNBLFVBQUlpQixJQUFJLEdBQUdELFNBQVMsQ0FBQyxDQUFELENBQXBCO0FBQ0FqQixhQUFPLENBQUNDLEdBQVIsQ0FBWWlCLElBQUksQ0FBQ0MsTUFBTCxDQUFZUixLQUF4QjtBQUNBLFlBQU1TLFFBQVEsR0FBR0YsSUFBSSxDQUFDQyxNQUFMLENBQVlSLEtBQVosQ0FBa0JVLE1BQWxCLENBQ1pDLElBQUQsSUFDSUEsSUFBSSxDQUFDQyxVQUFMLENBQWdCQyxLQUFoQixLQUNBL0IsT0FBTyxDQUFDUyxhQUFSLENBQXNCSyxVQUF0QixDQUFpQ2tCLFdBQWpDLEVBSFMsQ0FBakI7QUFLQXpCLGFBQU8sQ0FBQ0MsR0FBUixDQUFZO0FBQUVtQjtBQUFGLE9BQVo7QUFDQUYsVUFBSSxDQUFDQyxNQUFMLENBQVlSLEtBQVosR0FBb0JTLFFBQXBCO0FBQ0EsWUFBTU0sWUFBWSxHQUFHLENBQUNSLElBQUQsRUFBT0QsU0FBUyxDQUFDLENBQUQsQ0FBaEIsQ0FBckI7QUFDQSxhQUFPVCxLQUFLLENBQUNNLEtBQU4sQ0FBWSxJQUFaLEVBQWtCLEdBQUdDLEtBQUgsQ0FBU0MsSUFBVCxDQUFjVSxZQUFkLENBQWxCLENBQVA7QUFDSCxLQWpCRDtBQWtCSCxHQTlDaUMsQ0ErQ2xDOzs7QUFDQWpDLFNBQU8sQ0FBQ1MsYUFBUixHQUF3QlYsTUFBeEI7QUFDQVEsU0FBTyxDQUFDQyxHQUFSLENBQVksVUFBWixFQWpEa0MsQ0FrRGxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTBCLFlBQVUsQ0FBQyxNQUFNO0FBQ2IzQixXQUFPLENBQUNDLEdBQVIsQ0FBWVIsT0FBTyxDQUFDZ0IsR0FBcEIsRUFEYSxDQUNhOztBQUMxQlosZUFBVyxDQUFDTCxNQUFELENBQVg7QUFDQWUsY0FBVSxHQUhHLENBSWI7QUFDSCxHQUxTLEVBS1AsSUFMTyxDQUFWO0FBTUgsQ0F2RUQ7O2lCQXdFZWhCLE07QUFBQTs7Ozs7Ozs7OzswQkF4RVRBLE0iLCJmaWxlIjoiLi9zcmMvaW5qZWN0ZWQvc2NyaXB0LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXlXaW5kb3cgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbi8vIGltcG9ydCBhdXRvUmVmcmVzaCBmcm9tICcuL2F1dG9SZWZyZXNoJztcbi8qXG4gICAgcmlwIEkgbXVzdCBoYXZlIGV2ZXJ5IGZ1bmN0aW9uIGluIDEgZmlsZSB1bml0bGwgSSBmaWd1cmUgb3V0IGhvdyB0byB1c2Ugd2VicGFja1xuICAgICovXG5jb25zdCBpbmplY3QgPSAoY29uZmlnOiBhbnkpOiB2b2lkID0+IHtcbiAgICBjb25zdCBNd2luZG93ID0gKHdpbmRvdyBhcyB1bmtub3duKSBhcyBteVdpbmRvdztcblxuICAgIGlmIChcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPT09XG4gICAgICAgIFwiaHR0cHM6Ly93d3cuY29uZmxpY3RuYXRpb25zLmNvbS9nYW1lLnBocD9idXN0PTFcIlxuICAgICkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF1dG9SZWZyZXNoKF9jb25maWc6IGFueSkge1xuICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImludGVydmFsIGNoZWNraW5nLi4uXCIpO1xuICAgICAgICAgICAgaWYgKCFNd2luZG93LmNocm9tZVN0b3JhZ2UuYXV0b1JlZnJlc2gpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47IC8vIG9ubHkgZXhlY3V0ZSBpZiB0aGlzIHNldHRpbmcgaGFzIGJlZW4gZW5hYmxlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZ2FtZXNfYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN1aV9vcGVuX25ld19nYW1lc1wiKTtcbiAgICAgICAgICAgIGlmICghZ2FtZXNfYnV0dG9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICBnYW1lc19idXR0b24uY2xpY2soKTtcbiAgICAgICAgfSwgMWUzKTtcbiAgICAgICAgLy8gaWYoIXdpbmRvdy5sb2NhdGlvKVxuICAgICAgICBjb25zb2xlLmxvZyhcImF1dG8gcmVmcmVzaCBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2FtZUZpbHRlcigpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJnYW1lIGZpbHRlciBjYWxsZWRcIik7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gTXdpbmRvdy5odXAubW9kZWwuZ2FtZXMuR2FtZS5vblNlYXJjaEdhbWVzTG9hZGVkO1xuICAgICAgICBNd2luZG93Lmh1cC5tb2RlbC5nYW1lcy5HYW1lLm9uU2VhcmNoR2FtZXNMb2FkZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoIU13aW5kb3cuY2hyb21lU3RvcmFnZS5nYW1lRmlsdGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3h5LmFwcGx5KHRoaXMsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInByb3h5IGNhbGxlZFwiKTtcbiAgICAgICAgICAgIC8vIGlmKCFNd2luZG93LmNocm9tZVN0b3JhZ2UuZ2FtKVxuICAgICAgICAgICAgbGV0IG5ld0EgPSBhcmd1bWVudHNbMF07XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhuZXdBLnJlc3VsdC5nYW1lcyk7XG4gICAgICAgICAgICBjb25zdCBuZXdHYW1lcyA9IG5ld0EucmVzdWx0LmdhbWVzLmZpbHRlcihcbiAgICAgICAgICAgICAgICAoZ2FtZTogYW55KSA9PlxuICAgICAgICAgICAgICAgICAgICBnYW1lLnByb3BlcnRpZXMudGl0bGUgPT09XG4gICAgICAgICAgICAgICAgICAgIE13aW5kb3cuY2hyb21lU3RvcmFnZS5nYW1lRmlsdGVyLnRvVXBwZXJDYXNlKClcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh7IG5ld0dhbWVzIH0pO1xuICAgICAgICAgICAgbmV3QS5yZXN1bHQuZ2FtZXMgPSBuZXdHYW1lcztcbiAgICAgICAgICAgIGNvbnN0IG5ld0FyZ3VtZW50cyA9IFtuZXdBLCBhcmd1bWVudHNbMV1dO1xuICAgICAgICAgICAgcmV0dXJuIHByb3h5LmFwcGx5KHRoaXMsIFtdLnNsaWNlLmNhbGwobmV3QXJndW1lbnRzKSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIGNvbnN0IE13aW5kb3cgLz0gKHdpbmRvdyBhcyB1bmtub3duKSBhcyBteVdpbmRvdztcbiAgICBNd2luZG93LmNocm9tZVN0b3JhZ2UgPSBjb25maWc7XG4gICAgY29uc29sZS5sb2coXCJpbmplY3RlZFwiKTtcbiAgICAvLyBjb25zb2xlLmxvZyhodXAuY29uZmlnLnVzZXIpO1xuICAgIC8vIE13aW5kb3cuaHVwID0ge1xuICAgIC8vICAgICBhSW50ZXJuYWw6IHt9LFxuICAgIC8vICAgICBhTGlzdGVuZXI6ICh2YWw6IGFueSkgPT4ge30sXG4gICAgLy8gICAgIHNldCBhKHZhbCkge1xuICAgIC8vICAgICAgICAgdGhpcy5hSW50ZXJuYWwgPSB2YWw7XG4gICAgLy8gICAgICAgICB0aGlzLmFMaXN0ZW5lcih2YWwpO1xuICAgIC8vICAgICB9LFxuICAgIC8vICAgICBnZXQgYSgpIHtcbiAgICAvLyAgICAgICAgIHJldHVybiB0aGlzLmFJbnRlcm5hbDtcbiAgICAvLyAgICAgfSxcbiAgICAvLyAgICAgcmVnaXN0ZXJMaXN0ZW5lcjogZnVuY3Rpb24gKGxpc3RlbmVyOiBhbnkpIHtcbiAgICAvLyAgICAgICAgIHRoaXMuYUxpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgLy8gICAgIH0sXG4gICAgLy8gfTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coTXdpbmRvdy5odXApOyAvLyB0aGlzIGlzIHRoZSBnb29kIGluZm9cbiAgICAgICAgYXV0b1JlZnJlc2goY29uZmlnKTtcbiAgICAgICAgZ2FtZUZpbHRlcigpO1xuICAgICAgICAvLyBldmFsKGAoJHthdXRvUmVmcmVzaC50b1N0cmluZygpfSkoJHtKU09OLnN0cmluZ2lmeShjb25maWcpfSlgKTtcbiAgICB9LCAxMDAwKTtcbn07XG5leHBvcnQgZGVmYXVsdCBpbmplY3Q7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/injected/script.ts\n");

/***/ })

})