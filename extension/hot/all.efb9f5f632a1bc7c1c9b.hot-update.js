webpackHotUpdate("all",{

/***/ "./src/injected/script.ts":
/*!********************************!*\
  !*** ./src/injected/script.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// import autoRefresh from './autoRefresh';\n\n/*\n    rip I must have every function in 1 file unitll I figure out how to use webpack\n    */\nconst inject = config => {\n  const Mwindow = window;\n\n  if (window.location.href === \"https://www.conflictnations.com/game.php?bust=1\") {\n    return;\n  }\n\n  function autoRefresh(_config) {\n    setInterval(() => {\n      console.log(\"interval checking...\");\n\n      if (!Mwindow.chromeStorage.autoRefresh) {\n        return; // only execute if this setting has been enabled\n      }\n\n      const games_button = document.querySelector(\"#ui_open_new_games\");\n\n      if (!games_button) {\n        return;\n      } //@ts-ignore\n\n\n      games_button.click();\n    }, 1e3); // if(!window.locatio)\n\n    console.log(\"auto refresh function\");\n  }\n\n  function gameFilter() {\n    const proxy = Mwindow.hup.model.games.Game.onSearchGamesLoaded;\n\n    Mwindow.hup.model.games.Game.onSearchGamesLoaded = function () {\n      let newA = arguments[0];\n      const newGames = newA.result.games.filter(game => game.title === \"FLASHPOINT\");\n      newA.result.games = newGames;\n      const newArguments = [newA, arguments[1]];\n      return proxy.apply(this, [].slice.call());\n    };\n  } // const Mwindow /= (window as unknown) as myWindow;\n\n\n  Mwindow.chromeStorage = config;\n  console.log(\"injected\"); // console.log(hup.config.user);\n  // Mwindow.hup = {\n  //     aInternal: {},\n  //     aListener: (val: any) => {},\n  //     set a(val) {\n  //         this.aInternal = val;\n  //         this.aListener(val);\n  //     },\n  //     get a() {\n  //         return this.aInternal;\n  //     },\n  //     registerListener: function (listener: any) {\n  //         this.aListener = listener;\n  //     },\n  // };\n\n  setTimeout(() => {\n    console.log(Mwindow.hup); // this is the good info\n\n    autoRefresh(config);\n    gameFilter; // eval(`(${autoRefresh.toString()})(${JSON.stringify(config)})`);\n  }, 1000);\n};\n\nconst _default = inject;\n/* harmony default export */ __webpack_exports__[\"default\"] = (_default);\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(inject, \"inject\", \"/home/eulerthedestroyer/Con-Extension/awesome-chrome-extension-boilerplate/src/injected/script.ts\");\n  reactHotLoader.register(_default, \"default\", \"/home/eulerthedestroyer/Con-Extension/awesome-chrome-extension-boilerplate/src/injected/script.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5qZWN0ZWQvc2NyaXB0LnRzPzc0MTYiXSwibmFtZXMiOlsiaW5qZWN0IiwiY29uZmlnIiwiTXdpbmRvdyIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImF1dG9SZWZyZXNoIiwiX2NvbmZpZyIsInNldEludGVydmFsIiwiY29uc29sZSIsImxvZyIsImNocm9tZVN0b3JhZ2UiLCJnYW1lc19idXR0b24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGljayIsImdhbWVGaWx0ZXIiLCJwcm94eSIsImh1cCIsIm1vZGVsIiwiZ2FtZXMiLCJHYW1lIiwib25TZWFyY2hHYW1lc0xvYWRlZCIsIm5ld0EiLCJhcmd1bWVudHMiLCJuZXdHYW1lcyIsInJlc3VsdCIsImZpbHRlciIsImdhbWUiLCJ0aXRsZSIsIm5ld0FyZ3VtZW50cyIsImFwcGx5Iiwic2xpY2UiLCJjYWxsIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBOztBQUNBOzs7QUFHQSxNQUFNQSxNQUFNLEdBQUlDLE1BQUQsSUFBdUI7QUFDbEMsUUFBTUMsT0FBTyxHQUFJQyxNQUFqQjs7QUFFQSxNQUNJQSxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLElBQWhCLEtBQ0EsaURBRkosRUFHRTtBQUNFO0FBQ0g7O0FBQ0QsV0FBU0MsV0FBVCxDQUFxQkMsT0FBckIsRUFBbUM7QUFDL0JDLGVBQVcsQ0FBQyxNQUFNO0FBQ2RDLGFBQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaOztBQUNBLFVBQUksQ0FBQ1IsT0FBTyxDQUFDUyxhQUFSLENBQXNCTCxXQUEzQixFQUF3QztBQUNwQyxlQURvQyxDQUM1QjtBQUNYOztBQUNELFlBQU1NLFlBQVksR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLG9CQUF2QixDQUFyQjs7QUFDQSxVQUFJLENBQUNGLFlBQUwsRUFBbUI7QUFDZjtBQUNILE9BUmEsQ0FTZDs7O0FBQ0FBLGtCQUFZLENBQUNHLEtBQWI7QUFDSCxLQVhVLEVBV1IsR0FYUSxDQUFYLENBRCtCLENBYS9COztBQUNBTixXQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNIOztBQUNELFdBQVNNLFVBQVQsR0FBc0I7QUFDbEIsVUFBTUMsS0FBSyxHQUFHZixPQUFPLENBQUNnQixHQUFSLENBQVlDLEtBQVosQ0FBa0JDLEtBQWxCLENBQXdCQyxJQUF4QixDQUE2QkMsbUJBQTNDOztBQUNBcEIsV0FBTyxDQUFDZ0IsR0FBUixDQUFZQyxLQUFaLENBQWtCQyxLQUFsQixDQUF3QkMsSUFBeEIsQ0FBNkJDLG1CQUE3QixHQUFtRCxZQUFZO0FBQzNELFVBQUlDLElBQUksR0FBR0MsU0FBUyxDQUFDLENBQUQsQ0FBcEI7QUFDQSxZQUFNQyxRQUFRLEdBQUdGLElBQUksQ0FBQ0csTUFBTCxDQUFZTixLQUFaLENBQWtCTyxNQUFsQixDQUNaQyxJQUFELElBQWVBLElBQUksQ0FBQ0MsS0FBTCxLQUFlLFlBRGpCLENBQWpCO0FBR0FOLFVBQUksQ0FBQ0csTUFBTCxDQUFZTixLQUFaLEdBQW9CSyxRQUFwQjtBQUNBLFlBQU1LLFlBQVksR0FBRyxDQUFDUCxJQUFELEVBQU9DLFNBQVMsQ0FBQyxDQUFELENBQWhCLENBQXJCO0FBQ0EsYUFBT1AsS0FBSyxDQUFDYyxLQUFOLENBQVksSUFBWixFQUFrQixHQUFHQyxLQUFILENBQVNDLElBQVQsRUFBbEIsQ0FBUDtBQUNILEtBUkQ7QUFTSCxHQXBDaUMsQ0FxQ2xDOzs7QUFDQS9CLFNBQU8sQ0FBQ1MsYUFBUixHQUF3QlYsTUFBeEI7QUFDQVEsU0FBTyxDQUFDQyxHQUFSLENBQVksVUFBWixFQXZDa0MsQ0F3Q2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQXdCLFlBQVUsQ0FBQyxNQUFNO0FBQ2J6QixXQUFPLENBQUNDLEdBQVIsQ0FBWVIsT0FBTyxDQUFDZ0IsR0FBcEIsRUFEYSxDQUNhOztBQUMxQlosZUFBVyxDQUFDTCxNQUFELENBQVg7QUFDQWUsY0FBVSxDQUhHLENBSWI7QUFDSCxHQUxTLEVBS1AsSUFMTyxDQUFWO0FBTUgsQ0E3REQ7O2lCQThEZWhCLE07QUFBQTs7Ozs7Ozs7OzswQkE5RFRBLE0iLCJmaWxlIjoiLi9zcmMvaW5qZWN0ZWQvc2NyaXB0LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXlXaW5kb3cgfSBmcm9tIFwiLi4vdHlwZXNcIjtcbi8vIGltcG9ydCBhdXRvUmVmcmVzaCBmcm9tICcuL2F1dG9SZWZyZXNoJztcbi8qXG4gICAgcmlwIEkgbXVzdCBoYXZlIGV2ZXJ5IGZ1bmN0aW9uIGluIDEgZmlsZSB1bml0bGwgSSBmaWd1cmUgb3V0IGhvdyB0byB1c2Ugd2VicGFja1xuICAgICovXG5jb25zdCBpbmplY3QgPSAoY29uZmlnOiBhbnkpOiB2b2lkID0+IHtcbiAgICBjb25zdCBNd2luZG93ID0gKHdpbmRvdyBhcyB1bmtub3duKSBhcyBteVdpbmRvdztcblxuICAgIGlmIChcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPT09XG4gICAgICAgIFwiaHR0cHM6Ly93d3cuY29uZmxpY3RuYXRpb25zLmNvbS9nYW1lLnBocD9idXN0PTFcIlxuICAgICkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF1dG9SZWZyZXNoKF9jb25maWc6IGFueSkge1xuICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImludGVydmFsIGNoZWNraW5nLi4uXCIpO1xuICAgICAgICAgICAgaWYgKCFNd2luZG93LmNocm9tZVN0b3JhZ2UuYXV0b1JlZnJlc2gpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47IC8vIG9ubHkgZXhlY3V0ZSBpZiB0aGlzIHNldHRpbmcgaGFzIGJlZW4gZW5hYmxlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZ2FtZXNfYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN1aV9vcGVuX25ld19nYW1lc1wiKTtcbiAgICAgICAgICAgIGlmICghZ2FtZXNfYnV0dG9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICBnYW1lc19idXR0b24uY2xpY2soKTtcbiAgICAgICAgfSwgMWUzKTtcbiAgICAgICAgLy8gaWYoIXdpbmRvdy5sb2NhdGlvKVxuICAgICAgICBjb25zb2xlLmxvZyhcImF1dG8gcmVmcmVzaCBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2FtZUZpbHRlcigpIHtcbiAgICAgICAgY29uc3QgcHJveHkgPSBNd2luZG93Lmh1cC5tb2RlbC5nYW1lcy5HYW1lLm9uU2VhcmNoR2FtZXNMb2FkZWQ7XG4gICAgICAgIE13aW5kb3cuaHVwLm1vZGVsLmdhbWVzLkdhbWUub25TZWFyY2hHYW1lc0xvYWRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxldCBuZXdBID0gYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgY29uc3QgbmV3R2FtZXMgPSBuZXdBLnJlc3VsdC5nYW1lcy5maWx0ZXIoXG4gICAgICAgICAgICAgICAgKGdhbWU6IGFueSkgPT4gZ2FtZS50aXRsZSA9PT0gXCJGTEFTSFBPSU5UXCJcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBuZXdBLnJlc3VsdC5nYW1lcyA9IG5ld0dhbWVzO1xuICAgICAgICAgICAgY29uc3QgbmV3QXJndW1lbnRzID0gW25ld0EsIGFyZ3VtZW50c1sxXV07XG4gICAgICAgICAgICByZXR1cm4gcHJveHkuYXBwbHkodGhpcywgW10uc2xpY2UuY2FsbCgpKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLy8gY29uc3QgTXdpbmRvdyAvPSAod2luZG93IGFzIHVua25vd24pIGFzIG15V2luZG93O1xuICAgIE13aW5kb3cuY2hyb21lU3RvcmFnZSA9IGNvbmZpZztcbiAgICBjb25zb2xlLmxvZyhcImluamVjdGVkXCIpO1xuICAgIC8vIGNvbnNvbGUubG9nKGh1cC5jb25maWcudXNlcik7XG4gICAgLy8gTXdpbmRvdy5odXAgPSB7XG4gICAgLy8gICAgIGFJbnRlcm5hbDoge30sXG4gICAgLy8gICAgIGFMaXN0ZW5lcjogKHZhbDogYW55KSA9PiB7fSxcbiAgICAvLyAgICAgc2V0IGEodmFsKSB7XG4gICAgLy8gICAgICAgICB0aGlzLmFJbnRlcm5hbCA9IHZhbDtcbiAgICAvLyAgICAgICAgIHRoaXMuYUxpc3RlbmVyKHZhbCk7XG4gICAgLy8gICAgIH0sXG4gICAgLy8gICAgIGdldCBhKCkge1xuICAgIC8vICAgICAgICAgcmV0dXJuIHRoaXMuYUludGVybmFsO1xuICAgIC8vICAgICB9LFxuICAgIC8vICAgICByZWdpc3Rlckxpc3RlbmVyOiBmdW5jdGlvbiAobGlzdGVuZXI6IGFueSkge1xuICAgIC8vICAgICAgICAgdGhpcy5hTGlzdGVuZXIgPSBsaXN0ZW5lcjtcbiAgICAvLyAgICAgfSxcbiAgICAvLyB9O1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhNd2luZG93Lmh1cCk7IC8vIHRoaXMgaXMgdGhlIGdvb2QgaW5mb1xuICAgICAgICBhdXRvUmVmcmVzaChjb25maWcpO1xuICAgICAgICBnYW1lRmlsdGVyO1xuICAgICAgICAvLyBldmFsKGAoJHthdXRvUmVmcmVzaC50b1N0cmluZygpfSkoJHtKU09OLnN0cmluZ2lmeShjb25maWcpfSlgKTtcbiAgICB9LCAxMDAwKTtcbn07XG5leHBvcnQgZGVmYXVsdCBpbmplY3Q7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/injected/script.ts\n");

/***/ })

})